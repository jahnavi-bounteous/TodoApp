// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginScreen /> renders correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <TextInput
    onChangeText={[Function]}
    placeholder="Username"
    style={
      {
        "borderColor": "#1e90ff",
        "borderRadius": 10,
        "borderWidth": 1,
        "fontSize": 16,
        "marginBottom": 10,
        "padding": 16,
        "width": "80%",
      }
    }
    testID="usernameInput"
    value=""
  />
  <View
    style={
      [
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
        },
        {
          "borderColor": "#1e90ff",
          "borderRadius": 10,
          "borderWidth": 1,
          "fontSize": 16,
          "marginBottom": 10,
          "padding": 16,
          "width": "80%",
        },
      ]
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Password"
      secureTextEntry={true}
      style={
        {
          "flex": 1,
          "fontSize": 16,
          "padding": 0,
        }
      }
      testID="passwordInput"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="passwordVisibilityButton"
    >
      <Text />
    </View>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#1e90ff",
        "borderRadius": 6,
        "marginVertical": 10,
        "opacity": 1,
        "paddingVertical": 12,
        "shadowColor": "#000",
        "shadowOffset": {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.8,
        "shadowRadius": 3,
        "width": "80%",
      }
    }
    testID="loginButton"
  >
    <Text
      style={
        {
          "color": "#fff",
          "fontSize": 16,
        }
      }
    >
      Login
    </Text>
  </View>
  <View
    style={
      {
        "flexDirection": "row",
      }
    }
  >
    <Text>
      Doesn't have an account ?
    </Text>
    <Text>
       
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "blue",
            "textDecorationLine": "underline",
          }
        }
      >
        Register
      </Text>
    </View>
  </View>
</View>
`;
